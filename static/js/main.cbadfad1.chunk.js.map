{"version":3,"sources":["components/calendar/constants.js","components/calendar/logic.js","helpers/validation.js","components/calendar/vendor-calendar.js","components/calendar/vendor-info.js","helpers/common.js","components/calendar/vendor-timeslots.js","components/calendar/api-client.js","components/calendar/config.js","components/calendar/data.js","components/calendar/api-calls.js","components/calendar/vendor-booking.js","components/calendar/index.js","App.js","reportWebVitals.js","index.js"],"names":["formatAvailabilityDate","newArray","date","newDate","Date","isNaN","isValidDate","push","sortAvailabilitiesAscending","a","b","VendorCalendar","props","availabilities","modifiers","disabled","calendarDay","some","item_date","isSameDay","isVendorAvailableByDay","length","className","selectedDay","minimumDate","locale","enUS","onDateChange","VendorInfo","vendorName","name","Loading","VendorTimeSlots","availableSlots","bookedSlots","isLoading","useState","availableSlotItems","setAvailableSlotItems","useEffect","map","idx","isReseved","includes","getTime","toString","onClick","handleTimeslotClick","format","onTimeslotClick","supabaseUrl","supabaseKey","dbStore","createClient","vendorData","time","bookingDay","toISOString","from","select","eq","filter","data","error","status","success","message","booking_time","booking_day","upsert","vendor_name","booking_date","ignoreDuplicates","single","newBooking","VendorBooking","messageText","setMessageText","errorMessage","setErrorMessage","setIsLoading","bookingIsDone","setBookingIsDone","selectedTimeslot","displaySuccessDiv","displayBookingDiv","style","display","onReset","rows","cols","placeholder","value","onChange","e","textAreaValue","target","insertBookingByVendorName","then","response","onBookingDone","Calendar","vendorAvailabilities","setVendorAvailabilities","vendorBookedSlots","setVendorBookedSlots","setVendorName","setSelectedDay","setSelectedTimeslot","setAvailableSlots","getVendorAvailabilities","calendar","reduce","sort","vendor","selectedDate","getBookingsByVendorNameDate","arrData","forEach","item","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAO,I,QCuCG,SAASA,EAAuBC,EAAUC,GAChD,IAAMC,EAAU,IAAIC,KAAKF,EAAI,WAK7B,OC7CG,SAAqBA,GACxB,OAAOA,aAAgBE,OAASC,MAAMH,GDyClCI,CAAYH,IACdF,EAASM,KAAKJ,GAETF,EAQF,SAASO,EAA4BC,EAAGC,GAC7C,OAAOD,EAAIC,E,mCEhDA,SAASC,EAAeC,GACrC,IAAMC,EAAiBD,EAAMC,gBAAkB,GAE3CC,EAAY,CACdC,SAAU,SAACb,GAAD,OFEL,SAAgCc,EAAYH,GAIjD,OAF0BA,EAAeI,MAAK,SAAAC,GAAS,OAAIC,YAAUD,EAAWF,MEJ3DI,CAAuBlB,EAAMW,KAE/CA,EAAeQ,SAClBP,EAAY,CAAEC,SAAU,SAACb,GAAD,OAAU,KASpC,OACE,qBAAKoB,UAAU,iDAAf,SACE,qBAAKA,UAAU,0BAAf,SACE,cAAC,IAAD,CACEpB,KAAMU,EAAMW,YACZC,YAAa,IAAIpB,KACjBU,UAAWA,EACXW,OAAQC,IACRC,aAde,SAACzB,GACY,oBAAvBU,EAAMe,cACff,EAAMe,aAAazB,UClBV,SAAS0B,EAAWhB,GACjC,IAAMiB,EAAajB,EAAMkB,MAAQ,GAC3BP,EAAcX,EAAMW,aAAe,GAEzC,OACE,qBAAKD,UAAU,8CAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,wBAAf,yBAEE,4BACE,4BAAIO,UAGNN,GAAe,yD,YCblB,SAASQ,IACZ,OACI,qBAAKT,UAAU,oBAAf,SACI,qBAAKA,UAAU,eAAf,8BCEG,SAASU,EAAgBpB,GACtC,IAAMqB,EAAiBrB,EAAMqB,gBAAkB,GACzCC,EAActB,EAAMsB,aAAe,GACnCC,EAAYvB,EAAMuB,YAAa,EAErC,EAAoDC,mBAAS,IAA7D,mBAAOC,EAAP,KAA2BC,EAA3B,KAEAC,qBAAU,WACR,IAAIF,EAAqB,GACzBJ,EAAeO,KAAI,SAACtC,EAAMuC,GACxB,IAAMC,EAAYR,EAAYS,SAASzC,EAAK0C,UAAUC,YAClD,aACA,GAEJ,OAAOR,EAAmB9B,KACxB,sBACEe,UAAS,wBAAmBoB,GAE5BI,QAAS,kBAAMC,EAAoB7C,EAAMwC,IAH3C,SAKGM,YAAO9C,EAAM,QAAS,CAAEuB,OAAQC,OAH5Be,OAOXH,EAAsBD,KACrB,CAACH,IAEJ,IAAMa,EAAsB,SAAC7C,EAAMwC,GAC7BA,GACiC,oBAA1B9B,EAAMqC,iBACfrC,EAAMqC,gBAAgB/C,IAI1B,OACE,qBAAKoB,UAAU,iDAAf,SACE,qBAAKA,UAAU,qBAAf,SACGa,EAAY,cAACJ,EAAD,IAAcM,M,oCCnC7Ba,ECHK,2CDILC,ECLG,sJDMIC,EAAUC,YAAaH,EAAaC,GETpCG,EAAW,CAAC,OAAS,CAAC,KAAO,qBAAqB,UAAY,UAAU,SAAW,CAAC,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,UAAY,6BAA6B,CAAC,U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","file":"static/js/main.cbadfad1.chunk.js","sourcesContent":["export const AVAILABLE_DATE_OBJECT_KEYNAME='date_time'\r\n","import { isValidDate } from '../../helpers/validation'\r\nimport { AVAILABLE_DATE_OBJECT_KEYNAME } from './constants'\r\nimport { isSameDay } from 'date-fns'\r\n\r\n  /*\r\n  * ----------------------\r\n  * check if vendor is available\r\n  * on specific day\r\n  * returns boolean\r\n  * ----------------------\r\n  */\r\n\r\n  export function isVendorAvailableByDay(calendarDay,availabilities) {\r\n\r\n    const vendorIsAvailable = availabilities.some(item_date => isSameDay(item_date, calendarDay));\r\n  \r\n    return vendorIsAvailable;\r\n  }\r\n\r\n  /*\r\n  * ----------------------\r\n  * Find TimeSlots by Day\r\n  * returns an array of dates\r\n  * ----------------------\r\n  */\r\n  \r\n  export function findVendorAvailabliesByDay(selectedDate,availabileDates){\r\n  \r\n   const timeSlotsByDay= availabileDates.filter(item_date => isSameDay(item_date, selectedDate));\r\n    return timeSlotsByDay;\r\n  }\r\n\r\n  /*\r\n  * ----------------------\r\n  * Convert to DateTime\r\n  * and remove invalid dates\r\n  * returns a new array\r\n  * ----------------------\r\n  */\r\n  export  function formatAvailabilityDate(newArray, date) {\r\n    const newDate = new Date(date[AVAILABLE_DATE_OBJECT_KEYNAME]);\r\n  \r\n    if (isValidDate(newDate)) {\r\n      newArray.push(newDate); // we only need the valid Dates\r\n    }\r\n    return newArray;\r\n  }\r\n  \r\n  /*\r\n  * ----------------------\r\n  * sort in ascending order\r\n  * ----------------------\r\n  */\r\n  export function sortAvailabilitiesAscending(a, b) {\r\n    return a - b;\r\n  }\r\n\r\n  /*\r\n  * ----------------------\r\n  * Sort by Ascending and Format Availabilities\r\n  * and remove invalid dates\r\n  * ----------------------\r\n  */\r\n  export function sortAndFormatAvailabilities(dates) {\r\n    return dates\r\n      .reduce(formatAvailabilityDate, [])\r\n      .sort(sortAvailabilitiesAscending)\r\n  \r\n  }\r\n  ","export function isValidDate(date) {\r\n    return date instanceof Date && !isNaN(date);\r\n}","import { enUS } from \"date-fns/locale\";\r\nimport { DatePickerCalendar } from \"react-nice-dates\";\r\nimport \"react-nice-dates/build/style.css\";\r\n\r\nimport { isVendorAvailableByDay } from \"./logic\";\r\n\r\nexport default function VendorCalendar(props) {\r\n  const availabilities = props.availabilities || [];\r\n\r\n  let modifiers = {\r\n    disabled: (date) => !isVendorAvailableByDay(date, availabilities), //disable Not Available Day\r\n  };\r\n  if (!availabilities.length) {\r\n    modifiers = { disabled: (date) => true }; // if no availabilities, disable the calendar selection\r\n  }\r\n\r\n  const handleDayClick = (date) => {\r\n    if (typeof props.onDateChange === \"function\") {\r\n      props.onDateChange(date);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendarComponent-container calendar-flex-item\">\r\n      <div className=\"nice-calendar-container\">\r\n        <DatePickerCalendar\r\n          date={props.selectedDay}\r\n          minimumDate={new Date()}\r\n          modifiers={modifiers}\r\n          locale={enUS}\r\n          onDateChange={handleDayClick}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function VendorInfo(props) {\r\n  const vendorName = props.name || \"\";\r\n  const selectedDay = props.selectedDay || \"\";\r\n\r\n  return (\r\n    <div className=\"calendarComponent-vendor calendar-flex-item\">\r\n      <div className=\"vendor-info-container\">\r\n        <div className=\"vendor-name-container\">\r\n          Vendor Name:\r\n          <p>\r\n            <b>{vendorName}</b>\r\n          </p>\r\n        </div>\r\n        {!selectedDay && <p>Please select a day</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export function Loading() {\r\n    return (\r\n        <div className=\"loading-container\">\r\n            <div className=\"loading-text\">Please Wait...</div>\r\n        </div>\r\n    )\r\n}","import { format } from \"date-fns\";\r\nimport { enUS } from \"date-fns/locale\";\r\nimport { Loading } from \"../../helpers/common\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nexport default function VendorTimeSlots(props) {\r\n  const availableSlots = props.availableSlots || [];\r\n  const bookedSlots = props.bookedSlots || [];\r\n  const isLoading = props.isLoading || false;\r\n\r\n  const [availableSlotItems, setAvailableSlotItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let availableSlotItems = [];\r\n    availableSlots.map((date, idx) => {\r\n      const isReseved = bookedSlots.includes(date.getTime().toString())\r\n        ? \"isReserved\"\r\n        : \"\";\r\n\r\n      return availableSlotItems.push(\r\n        <span\r\n          className={`timeslot-item ${isReseved}`}\r\n          key={idx}\r\n          onClick={() => handleTimeslotClick(date, isReseved)}\r\n        >\r\n          {format(date, \"HH:mm\", { locale: enUS })}\r\n        </span>\r\n      );\r\n    });\r\n    setAvailableSlotItems(availableSlotItems);\r\n  }, [bookedSlots]);\r\n\r\n  const handleTimeslotClick = (date, isReseved) => {\r\n    if (isReseved) return;\r\n    if (typeof props.onTimeslotClick === \"function\") {\r\n      props.onTimeslotClick(date);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendarComponent-timeslots calendar-flex-item\">\r\n      <div className=\"timeslot-container\">\r\n        {isLoading ? <Loading /> : availableSlotItems}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// DB api used for this app is supabase.com which is similar to firebase/dynamodb/cognito\r\n// this was chosen because it had less hassle of setting it up for a demo project compared to others\r\n\r\nimport { createClient } from '@supabase/supabase-js'\r\nimport { DbCredentials } from './config'; //this file should be in app level directory in an env file\r\n\r\n// Initialize \r\nconst supabaseUrl = DbCredentials.dbUrl;\r\nconst supabaseKey = DbCredentials.key;\r\nexport const dbStore = createClient(supabaseUrl, supabaseKey);\r\n","\r\n// this should be in .env file in app level directory\r\nexport const DbCredentials = {\r\n    key: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYzMDU3MzgzMSwiZXhwIjoxOTQ2MTQ5ODMxfQ.qSHDEHJDbjaDd0hqfByWBJgiwVtibKAw4-Q6R12DOXA\",\r\n    dbUrl: \"https://vbbmudhzmgbkacqjnsgo.supabase.co\",\r\n    jwt: \"96ee53c9-cb7b-4860-bb82-b6959632ce18\"\r\n}","export const vendorData={\"vendor\":{\"name\":\"Happily Ever After\",\"time_zone\":\"-03:00\"},\"calendar\":[{\"date_time\":\"2020-10-24 17:10:09 +0200\"},{\"date_time\":\"2020-10-25 13:11:55 +0100\"},{\"date_time\":\"2020-10-26 23:43:20 +0100\"},{\"date_time\":\"2020-11-01 04:50:17 +0100\"},{\"date_time\":\"2020-11-01 19:45:32 +0100\"},{\"date_time\":\"2020-11-06 21:36:23 +0100\"},{\"date_time\":\"2020-11-11 05:08:07 +0100\"},{\"date_time\":\"2020-11-14 06:44:38 +0100\"},{\"date_time\":\"2020-11-18 03:01:16 +0100\"},{\"date_time\":\"2020-11-18 22:41:57 +0100\"},{\"date_time\":\"2020-11-18 23:57:46 +0100\"},{\"date_time\":\"2020-11-19 14:27:33 +0100\"},{\"date_time\":\"2020-11-19 22:00:35 +0100\"},{\"date_time\":\"2020-11-25 05:46:55 +0100\"},{\"date_time\":\"2020-11-29 02:44:54 +0100\"},{\"date_time\":\"2020-12-02 17:58:20 +0100\"},{\"date_time\":\"2020-12-11 00:01:15 +0100\"},{\"date_time\":\"2020-12-11 16:28:53 +0100\"},{\"date_time\":\"2020-12-12 19:14:44 +0100\"},{\"date_time\":\"2020-12-13 11:11:52 +0100\"},{\"date_time\":\"2020-12-15 06:29:18 +0100\"},{\"date_time\":\"2020-12-15 09:00:33 +0100\"},{\"date_time\":\"2020-12-18 22:02:19 +0100\"},{\"date_time\":\"2020-12-21 05:53:20 +0100\"},{\"date_time\":\"2020-12-21 23:31:25 +0100\"},{\"date_time\":\"2020-12-22 10:04:44 +0100\"},{\"date_time\":\"2020-12-22 10:14:45 +0100\"},{\"date_time\":\"2020-12-25 04:59:03 +0100\"},{\"date_time\":\"2020-12-27 07:32:15 +0100\"},{\"date_time\":\"2020-12-29 13:11:51 +0100\"},{\"date_time\":\"2020-12-29 22:51:07 +0100\"},{\"date_time\":\"2021-01-07 15:55:09 +0100\"},{\"date_time\":\"2021-01-08 21:07:59 +0100\"},{\"date_time\":\"2021-01-08 21:20:44 +0100\"},{\"date_time\":\"2021-01-13 11:30:57 +0100\"},{\"date_time\":\"2021-01-13 12:13:12 +0100\"},{\"date_time\":\"2021-01-14 11:12:39 +0100\"},{\"date_time\":\"2021-01-15 13:43:24 +0100\"},{\"date_time\":\"2021-01-15 17:37:33 +0100\"},{\"date_time\":\"2021-01-15 22:46:12 +0100\"},{\"date_time\":\"2021-01-15 23:36:11 +0100\"},{\"date_time\":\"2021-01-16 18:41:47 +0100\"},{\"date_time\":\"2021-01-20 00:58:41 +0100\"},{\"date_time\":\"2021-01-23 13:01:32 +0100\"},{\"date_time\":\"2021-01-27 09:41:08 +0100\"},{\"date_time\":\"2021-01-27 12:51:55 +0100\"},{\"date_time\":\"2021-01-31 14:22:06 +0100\"},{\"date_time\":\"2021-02-03 11:13:09 +0100\"},{\"date_time\":\"2021-02-09 02:06:07 +0100\"},{\"date_time\":\"2021-02-11 02:53:07 +0100\"},{\"date_time\":\"2021-02-14 04:45:30 +0100\"},{\"date_time\":\"2021-02-15 07:54:36 +0100\"},{\"date_time\":\"2021-02-17 18:46:01 +0100\"},{\"date_time\":\"2021-02-17 22:15:54 +0100\"},{\"date_time\":\"2021-02-18 00:38:01 +0100\"},{\"date_time\":\"2021-02-18 19:49:20 +0100\"},{\"date_time\":\"2021-02-19 13:39:05 +0100\"},{\"date_time\":\"2021-02-20 03:45:11 +0100\"},{\"date_time\":\"2021-02-24 20:16:08 +0100\"},{\"date_time\":\"2021-02-25 16:53:10 +0100\"},{\"date_time\":\"2021-02-26 15:26:59 +0100\"},{\"date_time\":\"2021-02-28 11:31:12 +0100\"},{\"date_time\":\"2021-02-28 22:10:41 +0100\"},{\"date_time\":\"2021-03-01 12:41:14 +0100\"},{\"date_time\":\"2021-03-02 04:52:45 +0100\"},{\"date_time\":\"2021-03-02 09:53:01 +0100\"},{\"date_time\":\"2021-03-02 15:55:51 +0100\"},{\"date_time\":\"2021-03-04 06:46:50 +0100\"},{\"date_time\":\"2021-03-04 07:56:01 +0100\"},{\"date_time\":\"2021-03-11 08:30:23 +0100\"},{\"date_time\":\"2021-03-13 17:34:09 +0100\"},{\"date_time\":\"2021-03-15 05:19:35 +0100\"},{\"date_time\":\"2021-03-15 12:23:31 +0100\"},{\"date_time\":\"2021-03-17 15:44:58 +0100\"},{\"date_time\":\"2021-03-19 09:53:12 +0100\"},{\"date_time\":\"2021-03-23 06:47:07 +0100\"},{\"date_time\":\"2021-03-23 19:13:09 +0100\"},{\"date_time\":\"2021-03-24 11:33:21 +0100\"},{\"date_time\":\"2021-03-25 05:59:41 +0100\"},{\"date_time\":\"2021-03-25 21:30:57 +0100\"},{\"date_time\":\"2021-03-28 12:19:06 +0200\"},{\"date_time\":\"2021-03-30 01:45:35 +0200\"},{\"date_time\":\"2021-04-01 18:45:17 +0200\"},{\"date_time\":\"2021-04-03 14:51:07 +0200\"},{\"date_time\":\"2021-04-06 21:47:32 +0200\"},{\"date_time\":\"2021-04-07 12:55:20 +0200\"},{\"date_time\":\"2021-04-08 00:29:11 +0200\"},{\"date_time\":\"2021-04-10 08:10:25 +0200\"},{\"date_time\":\"2021-04-11 05:55:43 +0200\"},{\"date_time\":\"2021-04-11 13:58:41 +0200\"},{\"date_time\":\"2021-04-13 12:49:42 +0200\"},{\"date_time\":\"2021-04-16 01:49:16 +0200\"},{\"date_time\":\"2021-04-22 23:35:39 +0200\"},{\"date_time\":\"2021-04-23 22:12:56 +0200\"},{\"date_time\":\"2021-04-23 23:44:35 +0200\"},{\"date_time\":\"2021-04-26 05:22:32 +0200\"},{\"date_time\":\"2021-04-27 17:37:19 +0200\"},{\"date_time\":\"2021-05-01 02:15:42 +0200\"},{\"date_time\":\"2021-05-02 02:43:02 +0200\"},{\"date_time\":\"2021-05-02 10:18:49 +0200\"},{\"date_time\":\"2021-05-04 16:06:44 +0200\"},{\"date_time\":\"2021-05-06 12:47:14 +0200\"},{\"date_time\":\"2021-05-07 13:36:50 +0200\"},{\"date_time\":\"2021-05-08 18:52:30 +0200\"},{\"date_time\":\"2021-05-08 18:55:41 +0200\"},{\"date_time\":\"2021-05-09 09:08:26 +0200\"},{\"date_time\":\"2021-05-12 01:31:26 +0200\"},{\"date_time\":\"2021-05-16 20:22:32 +0200\"},{\"date_time\":\"2021-05-17 11:30:46 +0200\"},{\"date_time\":\"2021-05-17 15:16:26 +0200\"},{\"date_time\":\"2021-05-17 23:23:34 +0200\"},{\"date_time\":\"2021-05-19 01:19:48 +0200\"},{\"date_time\":\"2021-05-20 02:16:42 +0200\"},{\"date_time\":\"2021-05-20 09:55:58 +0200\"},{\"date_time\":\"2021-05-21 07:02:23 +0200\"},{\"date_time\":\"2021-05-23 07:31:17 +0200\"},{\"date_time\":\"2021-05-23 14:28:06 +0200\"},{\"date_time\":\"2021-05-24 09:55:14 +0200\"},{\"date_time\":\"2021-05-27 15:15:43 +0200\"},{\"date_time\":\"2021-05-28 19:48:56 +0200\"},{\"date_time\":\"2021-05-30 13:25:10 +0200\"},{\"date_time\":\"2021-05-31 00:31:19 +0200\"},{\"date_time\":\"2021-06-02 11:35:44 +0200\"},{\"date_time\":\"2021-06-03 03:03:38 +0200\"},{\"date_time\":\"2021-06-03 07:41:53 +0200\"},{\"date_time\":\"2021-06-05 05:48:59 +0200\"},{\"date_time\":\"2021-06-05 07:29:25 +0200\"},{\"date_time\":\"2021-06-05 16:43:55 +0200\"},{\"date_time\":\"2021-06-09 16:55:43 +0200\"},{\"date_time\":\"2021-06-10 01:52:52 +0200\"},{\"date_time\":\"2021-06-20 06:55:16 +0200\"},{\"date_time\":\"2021-06-22 14:52:41 +0200\"},{\"date_time\":\"2021-06-26 05:11:53 +0200\"},{\"date_time\":\"2021-06-30 23:23:28 +0200\"},{\"date_time\":\"2021-07-07 13:11:41 +0200\"},{\"date_time\":\"2021-07-07 14:58:08 +0200\"},{\"date_time\":\"2021-07-11 06:31:38 +0200\"},{\"date_time\":\"2021-07-11 08:39:54 +0200\"},{\"date_time\":\"2021-07-13 07:51:49 +0200\"},{\"date_time\":\"2021-07-15 06:17:19 +0200\"},{\"date_time\":\"2021-07-15 12:49:15 +0200\"},{\"date_time\":\"2021-07-15 19:27:16 +0200\"},{\"date_time\":\"2021-07-19 12:13:17 +0200\"},{\"date_time\":\"2021-07-24 00:37:02 +0200\"},{\"date_time\":\"2021-07-24 03:31:50 +0200\"},{\"date_time\":\"2021-07-24 12:13:56 +0200\"},{\"date_time\":\"2021-07-25 20:49:10 +0200\"},{\"date_time\":\"2021-07-26 20:54:12 +0200\"},{\"date_time\":\"2021-07-27 00:21:31 +0200\"},{\"date_time\":\"2021-07-28 16:35:27 +0200\"},{\"date_time\":\"2021-07-29 00:41:51 +0200\"},{\"date_time\":\"2021-07-31 03:26:45 +0200\"},{\"date_time\":\"2021-08-03 18:58:56 +0200\"},{\"date_time\":\"2021-08-04 13:48:29 +0200\"},{\"date_time\":\"2021-08-05 20:24:32 +0200\"},{\"date_time\":\"2021-08-05 21:57:03 +0200\"},{\"date_time\":\"2021-08-06 23:28:56 +0200\"},{\"date_time\":\"2021-08-07 02:07:12 +0200\"},{\"date_time\":\"2021-08-08 04:17:19 +0200\"},{\"date_time\":\"2021-08-12 13:29:12 +0200\"},{\"date_time\":\"2021-08-13 10:36:32 +0200\"},{\"date_time\":\"2021-08-13 19:40:23 +0200\"},{\"date_time\":\"2021-08-14 15:40:04 +0200\"},{\"date_time\":\"2021-08-16 03:55:42 +0200\"},{\"date_time\":\"2021-08-19 11:21:12 +0200\"},{\"date_time\":\"2021-08-19 18:29:35 +0200\"},{\"date_time\":\"2021-08-20 04:49:40 +0200\"},{\"date_time\":\"2021-08-23 21:41:42 +0200\"},{\"date_time\":\"2021-08-25 01:24:08 +0200\"},{\"date_time\":\"2021-08-27 18:06:56 +0200\"},{\"date_time\":\"2021-08-29 05:50:20 +0200\"},{\"date_time\":\"2021-08-31 02:31:23 +0200\"},{\"date_time\":\"2021-08-31 12:26:53 +0200\"},{\"date_time\":\"2021-09-01 22:57:42 +0200\"},{\"date_time\":\"2021-09-02 13:29:36 +0200\"},{\"date_time\":\"2021-09-08 03:43:18 +0200\"},{\"date_time\":\"2021-09-09 16:45:54 +0200\"},{\"date_time\":\"2021-09-10 00:03:54 +0200\"},{\"date_time\":\"2021-09-10 00:58:30 +0200\"},{\"date_time\":\"2021-09-10 19:32:28 +0200\"},{\"date_time\":\"2021-09-12 05:30:29 +0200\"},{\"date_time\":\"2021-09-13 20:31:39 +0200\"},{\"date_time\":\"2021-09-14 03:43:15 +0200\"},{\"date_time\":\"2021-09-14 12:36:43 +0200\"},{\"date_time\":\"2021-09-15 11:51:11 +0200\"},{\"date_time\":\"2021-09-16 08:39:57 +0200\"},{\"date_time\":\"2021-09-20 13:32:30 +0200\"},{\"date_time\":\"2021-09-23 22:03:05 +0200\"},{\"date_time\":\"2021-09-24 04:31:11 +0200\"},{\"date_time\":\"2021-09-25 22:10:59 +0200\"},{\"date_time\":\"2021-09-29 19:41:01 +0200\"},{\"date_time\":\"2021-10-01 09:47:43 +0200\"},{\"date_time\":\"2021-10-03 12:09:17 +0200\"},{\"date_time\":\"2021-10-04 10:41:41 +0200\"},{\"date_time\":\"2021-10-06 02:14:35 +0200\"},{\"date_time\":\"2021-10-09 19:48:46 +0200\"},{\"date_time\":\"2021-10-10 03:49:07 +0200\"},{\"date_time\":\"2021-10-14 11:27:51 +0200\"},{\"date_time\":\"2021-10-16 19:34:18 +0200\"},{\"date_time\":\"2021-10-21 01:43:34 +0200\"}]}","import { format } from \"date-fns\";\r\nimport { dbStore } from \"./api-client\";\r\nimport { vendorData } from \"./data\";\r\n\r\n/**\r\n * get booked slots by DAY and vendor name, used for time slots\r\n */\r\nexport async function getBookingsByVendorNameDate(vendorName, time) {\r\n  const bookingDay = format(time, \"yyyy-MM-dd\");\r\n  time = time.toISOString();\r\n  try {\r\n    let { data, error, status } = await dbStore\r\n      .from(\"bookings\")\r\n      .select(\"booking_date\")\r\n      .eq(\"vendor_name\", vendorName)\r\n      .filter(\"booking_day\", \"eq\", bookingDay);\r\n\r\n    if (error && status !== 406) {\r\n      throw error;\r\n    }\r\n\r\n    return { success: true, data };\r\n  } catch (error) {\r\n    return { success: false, message: error.message };\r\n  }\r\n}\r\n\r\n/*\r\n * checks whether vendor is booked for a specific date\r\n * works for validation\r\n * this can be replaced in backend side but since we dont have\r\n * access to backend and we are restricted by db,\r\n * we can only do this on frontend\r\n */\r\nexport async function isVendorBooked(vendorName, time) {\r\n  time = time.toISOString();\r\n  try {\r\n    let { data, error, status } = await dbStore\r\n      .from(\"bookings\")\r\n      .select(\"booking_date\")\r\n      .eq(\"vendor_name\", vendorName)\r\n      .eq(\"booking_date\", time);\r\n\r\n    if (error && status !== 406) {\r\n      throw error;\r\n    }\r\n\r\n    return { success: true, data };\r\n  } catch (error) {\r\n    return { success: false, message: error.message };\r\n  }\r\n}\r\n\r\n/*\r\n * this can be easily replaced by an axios call\r\n * to a json backend to get the data, for the\r\n * purpose of this demo, we have the data in a static file\r\n */\r\nexport async function getVendorAvailabilities() {\r\n  return { success: true, data: vendorData };\r\n}\r\n\r\n/*\r\n * it saves the new booked appointment in db,\r\n * before we save we convert to getTime for easier calculations\r\n * the \"supabase\" database has restrictions,hence the compromise\r\n */\r\nexport async function insertBookingByVendorName(\r\n  vendorName,\r\n  message,\r\n  booking_time\r\n) {\r\n  booking_time = booking_time.getTime();\r\n\r\n  const booking_day = format(booking_time, \"yyyy-MM-dd\"); //todo: do the calculation in backend, this is a frontend fix\r\n  try {\r\n    let { newBooking, error, status } = await dbStore\r\n      .from(\"bookings\")\r\n      .upsert(\r\n        {\r\n          vendor_name: vendorName,\r\n          message: message,\r\n          booking_date: booking_time,\r\n          booking_day,\r\n        },\r\n        { ignoreDuplicates: true }\r\n      )\r\n      .single();\r\n\r\n    if (error && status !== 406) {\r\n      throw error;\r\n    }\r\n    return { success: true, data: newBooking };\r\n  } catch (error) {\r\n    return { success: false, message: error.message };\r\n  }\r\n}\r\n","import { format } from \"date-fns\";\r\nimport { enUS } from \"date-fns/locale\";\r\nimport React, { useState } from \"react\";\r\nimport { insertBookingByVendorName } from \"./api-calls\";\r\nimport { Loading } from \"../../helpers/common\";\r\n\r\nexport default function VendorBooking(props) {\r\n  const [messageText, setMessageText] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [bookingIsDone, setBookingIsDone] = useState(false);\r\n\r\n  const vendorName = props.name || \"\";\r\n  const selectedDay = props.selectedDay || \"\";\r\n  const selectedTimeslot = props.selectedTimeslot || \"\";\r\n\r\n  const handleMessageChange = (e) => {\r\n    const textAreaValue = e.target.value;\r\n    setMessageText(textAreaValue);\r\n  };\r\n  const handleReset = () => {\r\n    if (typeof props.onReset === \"function\") {\r\n      props.onReset();\r\n    }\r\n  };\r\n  const handleBookAppointment = () => {\r\n    if (!messageText.length) {\r\n      setErrorMessage(\"* Reason can not be empty!\");\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    insertBookingByVendorName(vendorName, messageText, selectedTimeslot).then(\r\n      (response) => {\r\n        if (response.success) {\r\n          setIsLoading(false);\r\n          setBookingIsDone(true);\r\n          if (typeof props.onBookingDone === \"function\") {\r\n            props.onBookingDone();\r\n          }\r\n        } else if (\r\n          !response.success &&\r\n          response.message.includes(\"duplicate\")\r\n        ) {\r\n          setIsLoading(false);\r\n          setErrorMessage(\"This Slot is booked, Please Choose another Slot!\");\r\n        } else {\r\n          setIsLoading(false);\r\n          setErrorMessage(\r\n            \"An unexpected error happened, administrator is notified!\"\r\n          );\r\n        }\r\n      }\r\n    );\r\n  };\r\n  let displaySuccessDiv = \"none\";\r\n  let displayBookingDiv = \"block\";\r\n  if (bookingIsDone) {\r\n    displaySuccessDiv = \"block\";\r\n    displayBookingDiv = \"none\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"calendarComponent-vendor-booking calendar-flex-item\">\r\n      <div className=\"vendor-booking-container\">\r\n        {isLoading && <Loading />}\r\n        {bookingIsDone && (\r\n          <div\r\n            className=\"success-message\"\r\n            style={{ display: displaySuccessDiv }}\r\n          >\r\n            Thank you for booking with \"<b>{vendorName}</b>\".\r\n            <br />\r\n            A representative will contact you soon.\r\n            <br />\r\n            <span className=\"btn book-appointment\" onClick={handleReset}>\r\n              Book another Appointment\r\n            </span>\r\n          </div>\r\n        )}\r\n        <div className=\"booking-form\" style={{ display: displayBookingDiv }}>\r\n          <div className=\"vendor-name-container\">\r\n            Book an Appointment:\r\n            <p>\r\n              <b>{vendorName}</b>\r\n            </p>\r\n          </div>\r\n          {selectedTimeslot && selectedDay && (\r\n            <p>\r\n              Date: {format(selectedDay, \"dd MMM yyyy\", { locale: enUS })} at:{\" \"}\r\n              {format(selectedTimeslot, \"HH:mm\", { locale: enUS })}\r\n            </p>\r\n          )}\r\n          <div className=\"message-form-container\">\r\n            <form>\r\n              <textarea\r\n                rows=\"8\"\r\n                cols=\"50\"\r\n                placeholder=\"Please write a reason...\"\r\n                value={messageText}\r\n                onChange={handleMessageChange}\r\n              />\r\n              {errorMessage && (\r\n                <div className=\"required-field\">{errorMessage}</div>\r\n              )}\r\n              <span\r\n                className=\"btn book-appointment\"\r\n                onClick={handleBookAppointment}\r\n              >\r\n                Book Appointment\r\n              </span>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  sortAndFormatAvailabilities,\r\n  findVendorAvailabliesByDay,\r\n} from \"./logic\";\r\nimport VendorCalendar from \"./vendor-calendar\";\r\nimport VendorInfo from \"./vendor-info\";\r\nimport VendorTimeSlots from \"./vendor-timeslots\";\r\nimport VendorBooking from \"./vendor-booking\";\r\n\r\nimport {\r\n  getBookingsByVendorNameDate,\r\n  getVendorAvailabilities,\r\n} from \"./api-calls\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport default function Calendar() {\r\n  const [vendorAvailabilities, setVendorAvailabilities] = useState([]);\r\n  const [vendorBookedSlots, setVendorBookedSlots] = useState([]);\r\n  const [vendorName, setVendorName] = useState(null);\r\n  const [selectedDay, setSelectedDay] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedTimeslot, setSelectedTimeslot] = useState(null);\r\n  const [availableSlots, setAvailableSlots] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getVendorAvailabilities().then((response) => {\r\n      if (response.success) {\r\n        const vendorAvailabilities = sortAndFormatAvailabilities(\r\n          response.data.calendar\r\n        );\r\n        setVendorAvailabilities(vendorAvailabilities);\r\n        setVendorName(response.data.vendor.name);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleTimeSlotClick = (date) => {\r\n    setSelectedTimeslot(date);\r\n  };\r\n\r\n  const handleDayClick = (date) => {\r\n    setIsLoading(true);\r\n    getBookingsByVendorNameDate(vendorName, date).then((response) => {\r\n      let arrData = [];\r\n      response.data.forEach((item) => {\r\n        arrData.push(item[\"booking_date\"]); //remove the key and turn into array for easier checks\r\n      });\r\n      setVendorBookedSlots(arrData);\r\n      setIsLoading(false);\r\n    });\r\n\r\n    setSelectedDay(date);\r\n\r\n    setAvailableSlots(findVendorAvailabliesByDay(date, vendorAvailabilities));\r\n  };\r\n\r\n  // when booking is done, hide the slots\r\n  const handleBookingDone = () => {\r\n    setSelectedDay(null);\r\n  };\r\n\r\n  // reset the calendar\r\n  const handleReset = () => {\r\n    setSelectedDay(null);\r\n    setSelectedTimeslot(null);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"calendar-app-demo-container\" + (selectedDay ? \" --expanded\" : \"\")\r\n      }\r\n    >\r\n      <div className=\"calendarComponent-wrapper\">\r\n        <VendorInfo\r\n          name={vendorName}\r\n          selectedDay={selectedDay}\r\n          isLoading={isLoading}\r\n        />\r\n\r\n        {selectedTimeslot && (\r\n          <VendorBooking\r\n            name={vendorName}\r\n            selectedDay={selectedDay}\r\n            selectedTimeslot={selectedTimeslot}\r\n            onBookingDone={handleBookingDone}\r\n            onReset={handleReset}\r\n          />\r\n        )}\r\n\r\n        {!selectedTimeslot && (\r\n          <VendorCalendar\r\n            onDateChange={handleDayClick}\r\n            availabilities={vendorAvailabilities}\r\n            selectedDay={selectedDay}\r\n          />\r\n        )}\r\n\r\n        {selectedDay && (\r\n          <VendorTimeSlots\r\n            availableSlots={availableSlots}\r\n            onTimeslotClick={handleTimeSlotClick}\r\n            isLoading={isLoading}\r\n            bookedSlots={vendorBookedSlots}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","\nimport './App.css';\nimport Calendar from './components/calendar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       \n        <p>\n         Hola\n        </p>\n       \n        \n       \n      </header>\n      <div>\n         <Calendar/>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}